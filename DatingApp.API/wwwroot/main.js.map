{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/lists.resolver.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_resolvers/messages.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    }\r\n\r\n    this.alertify.error('You need to be logged in to access this area');\r\n    this.router.navigate(['/home']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '../../../node_modules/@angular/core';\r\nimport { CanDeactivate } from '../../../node_modules/@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges\r\n  implements CanDeactivate<MemberEditComponent> {\r\n  canDeactivate(component: MemberEditComponent) {\r\n    if (component.editForm.dirty) {\r\n      return confirm(\r\n        'Are you sure you want to continue? Any unsaved changes will be lost'\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  result: T;\r\n  pagination: Pagination;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/User';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  likesParam = 'Likers';\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService\r\n      .getUsers(this.pageNumber, this.pageSize, null, this.likesParam)\r\n      .pipe(\r\n        catchError(error => {\r\n          this.alertify.error('Problem retrieving data');\r\n          this.router.navigate(['/home']);\r\n          return of(null);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/User';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(route.params['id']).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/members']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/User';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving your data');\r\n        this.router.navigate(['/members']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/User';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  messageContainer = 'Unread';\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n    return this.userService\r\n      .getMessages(\r\n        this.authService.decodedToken.nameid,\r\n        this.pageNumber,\r\n        this.pageSize,\r\n        this.messageContainer\r\n      )\r\n      .pipe(\r\n        catchError(error => {\r\n          this.alertify.error('Problem retrieving messages');\r\n          this.router.navigate(['/home']);\r\n          return of(null);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\ndeclare let alertify: any;\r\n\r\n@Injectable()\r\nexport class AlertifyService {\r\n  constructor() {}\r\n\r\n  confirm(message: string, okCallback: () => any) {\r\n    alertify.confirm(message, function(e) {\r\n      if (e) {\r\n        okCallback();\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n\r\n  success(message: string) {\r\n    alertify.success(message);\r\n  }\r\n\r\n  error(message: string) {\r\n    alertify.error(message);\r\n  }\r\n\r\n  warning(message: string) {\r\n    alertify.warning(message);\r\n  }\r\n\r\n  message(message: string) {\r\n    alertify.message(message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl + 'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  currentUser: User;\r\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\r\n  currentPhotoUrl = this.photoUrl.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  changeMemberPhoto(photoUrl: string) {\r\n    this.photoUrl.next(photoUrl);\r\n  }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'login', model).pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n          localStorage.setItem('user', JSON.stringify(user.user));\r\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n          this.currentUser = user.user;\r\n          this.changeMemberPhoto(this.currentUser.photoUrl);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  register(user: User) {\r\n    return this.http.post(this.baseUrl + 'register', user);\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError(error => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          if (error.status === 401) {\r\n            return throwError(error.statusText);\r\n          }\r\n          const applicationError = error.headers.get('Application-Error');\r\n          if (applicationError) {\r\n            console.error(applicationError);\r\n            return throwError(applicationError);\r\n          }\r\n          const serverError = error.error;\r\n          let modalStateError = '';\r\n          if (serverError && typeof serverError === 'object') {\r\n            for (const key in serverError) {\r\n              if (serverError[key]) {\r\n                modalStateError += serverError[key] + '\\n';\r\n              }\r\n            }\r\n          }\r\n\r\n          return throwError(modalStateError || serverError || 'Server Error');\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/User';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { map } from '../../../node_modules/rxjs/operators';\r\nimport { Message } from '../_models/message';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsers(\r\n    page?,\r\n    itemsPerPage?,\r\n    userParams?,\r\n    likesParam?\r\n  ): Observable<PaginatedResult<User[]>> {\r\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<\r\n      User[]\r\n    >();\r\n\r\n    let params = new HttpParams();\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append('pageNumber', page);\r\n      params = params.append('pageSize', itemsPerPage);\r\n    }\r\n\r\n    if (userParams != null) {\r\n      params = params.append('minAge', userParams.minAge);\r\n      params = params.append('maxAge', userParams.maxAge);\r\n      params = params.append('gender', userParams.gender);\r\n      params = params.append('orderBy', userParams.orderBy);\r\n    }\r\n\r\n    if (likesParam === 'Likers') {\r\n      params = params.append('likers', 'true');\r\n    }\r\n\r\n    if (likesParam === 'Likees') {\r\n      params = params.append('likees', 'true');\r\n    }\r\n\r\n    return this.http\r\n      .get<User[]>(this.baseUrl + 'users', { observe: 'response', params })\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get('Pagination') != null) {\r\n            paginatedResult.pagination = JSON.parse(\r\n              response.headers.get('Pagination')\r\n            );\r\n          }\r\n          return paginatedResult;\r\n        })\r\n      );\r\n  }\r\n\r\n  getUser(id): Observable<User> {\r\n    return this.http.get<User>(this.baseUrl + 'users/' + id, httpOptions);\r\n  }\r\n\r\n  updateUser(id: number, user: User) {\r\n    return this.http.put(this.baseUrl + 'users/' + id, user);\r\n  }\r\n\r\n  setMainPhoto(userId: number, id: number) {\r\n    return this.http.post(\r\n      this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain',\r\n      {}\r\n    );\r\n  }\r\n\r\n  deletePhoto(userId: number, id: number) {\r\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\r\n  }\r\n\r\n  sendLike(id: number, recipientId: number) {\r\n    return this.http.post(\r\n      this.baseUrl + 'users/' + id + '/like/' + recipientId,\r\n      {}\r\n    );\r\n  }\r\n\r\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\r\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<\r\n      Message[]\r\n    >();\r\n\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('MessageContainer', messageContainer);\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append('pageNumber', page);\r\n      params = params.append('pageSize', itemsPerPage);\r\n    }\r\n\r\n    return this.http\r\n      .get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {\r\n        observe: 'response',\r\n        params\r\n      })\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get('Pagination') !== null) {\r\n            paginatedResult.pagination = JSON.parse(\r\n              response.headers.get('Pagination')\r\n            );\r\n          }\r\n          return paginatedResult;\r\n        })\r\n      );\r\n  }\r\n\r\n  getMessageThread(id: number, recipientId: number) {\r\n    return this.http.get<Message[]>(\r\n      this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId\r\n    );\r\n  }\r\n\r\n  sendMessage(id: number, message: Message) {\r\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\r\n  }\r\n\r\n  deleteMessage(id: number, userId: number) {\r\n    return this.http.post(\r\n      this.baseUrl + 'users/' + userId + '/messages/' + id,\r\n      {}\r\n    );\r\n  }\r\n\r\n  markAsRead(userId: number, messageId: number) {\r\n    this.http\r\n      .post(\r\n        this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read',\r\n        {}\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { User } from './_models/User';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  jwtHelper = new JwtHelperService();\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    const token = localStorage.getItem('token');\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (token) {\r\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\r\n    }\r\n    if (user) {\r\n      this.authService.currentUser = user;\r\n      this.authService.changeMemberPhoto(user.photoUrl);\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  BsDropdownModule,\r\n  TabsModule,\r\n  BsDatepickerModule,\r\n  PaginationModule,\r\n  ButtonsModule\r\n} from 'ngx-bootstrap';\r\nimport { RouterModule } from '@angular/router';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { NgxGalleryModule } from 'ngx-gallery';\r\nimport { FileUploadModule } from '../../node_modules/ng2-file-upload';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { AlertifyService } from './_services/alertify.service';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { appRoutes } from './routes';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { UserService } from './_services/user.service';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TimeAgoPipe } from 'time-ago-pipe';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    MemberCardComponent,\r\n    MemberDetailComponent,\r\n    MemberEditComponent,\r\n    MemberMessagesComponent,\r\n    PhotoEditorComponent,\r\n    TimeAgoPipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDropdownModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    RouterModule.forRoot(appRoutes),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        whitelistedDomains: ['localhost:5000'],\r\n        blacklistedRoutes: ['localhost:5000/api/auth']\r\n      }\r\n    })\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    ErrorInterceptorProvider,\r\n    AlertifyService,\r\n    AuthGuard,\r\n    UserService,\r\n    MemberDetailResolver,\r\n    MemberListResolver,\r\n    MemberEditResolver,\r\n    PreventUnsavedChanges,\r\n    ListsResolver,\r\n    MessagesResolver\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\r\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\r\\n    <h1>Find your match</h1>\\r\\n    <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\r\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-4\\\">\\r\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  registerMode = false;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  registerToggle() {\r\n    this.registerMode = true;\r\n  }\r\n\r\n  cancelRegisterMode(registerMode: boolean) {\r\n    this.registerMode = registerMode;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\r\\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination.totalItems}}</h2>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container mt-3\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like me</button>\\r\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I like</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\r\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"d-flex justify-content-center\\\">\\r\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\r\\n    (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n\\r\\n  </pagination>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../_models/User';\r\nimport { Pagination, PaginatedResult } from '../_models/pagination';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { ActivatedRoute } from '../../../node_modules/@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css']\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  users: User[];\r\n  pagination: Pagination;\r\n  likesParam: string;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private route: ActivatedRoute,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.users = data['users'].result;\r\n      this.pagination = data['users'].pagination;\r\n    });\r\n    this.likesParam = 'Likers';\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService\r\n      .getUsers(\r\n        this.pagination.currentPage,\r\n        this.pagination.itemsPerPage,\r\n        null,\r\n        this.likesParam\r\n      )\r\n      .subscribe(\r\n        (res: PaginatedResult<User[]>) => {\r\n          this.users = res.result;\r\n          this.pagination = res.pagination;\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\r\n}\r\n","module.exports = \".card:hover img {\\r\\n  -webkit-transform: scale(1.2, 1.2);\\r\\n          transform: scale(1.2, 1.2);\\r\\n  transition-duration: 500ms;\\r\\n  transition-timing-function: ease-out;\\r\\n  opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n  -webkit-transform: scale(1.0, 1.0);\\r\\n          transform: scale(1.0, 1.0);\\r\\n  transition-duration: 500ms;\\r\\n  transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.card-img-wrapper {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n  position: absolute;\\r\\n  bottom: -30%;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  margin-right: auto;\\r\\n  margin-left: auto;\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons {\\r\\n  bottom: 0;\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n  transition: all 0.3s ease-in-out;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"card mb-4\\\">\\r\\n  <div class=\\\"card-img-wrapper\\\">\\r\\n    <img class=\\\"card-img-top\\\" src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\r\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\r\\n      <li class=\\\"list-inline-item\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\">\\r\\n          <i class=\\\"fa fa-user\\\"></i>\\r\\n        </button>\\r\\n      </li>\\r\\n      <li class=\\\"list-inline-item\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"sendLike(user.id)\\\">\\r\\n          <i class=\\\"fa fa-heart\\\"></i>\\r\\n        </button>\\r\\n      </li>\\r\\n      <li class=\\\"list-inline-item\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\" [queryParams]=\\\"{tab: 3}\\\">\\r\\n          <i class=\\\"fa fa-envelope\\\"></i>\\r\\n        </button>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"card-body p-1\\\">\\r\\n    <h6 class=\\\"card-title text-center mb-1\\\">\\r\\n      <i class=\\\"fa fa-user\\\"></i>\\r\\n      {{user.knownAs}}, {{user.age}}\\r\\n    </h6>\\r\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { User } from '../../_models/User';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css']\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() user: User;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  sendLike(id: number) {\r\n    this.userService\r\n      .sendLike(this.authService.decodedToken.nameid, id)\r\n      .subscribe(\r\n        data => {\r\n          this.alertify.success('You have liked ' + this.user.knownAs);\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","module.exports = \".img-thumbnail {\\r\\n  margin: 25px;\\r\\n  width: 85%;\\r\\n  height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n  padding: 10px 15px;\\r\\n  background-color: #fff;\\r\\n  border-top: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <h1>{{user.knownAs}}'s Profile</h1>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div>\\r\\n            <strong>Location:</strong>\\r\\n            <p>{{user.city}}, {{user.country}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Age:</strong>\\r\\n            <p>{{user.age}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Last Active:</strong>\\r\\n            <p>{{user.lastActive | timeAgo}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Member Since:</strong>\\r\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <div class=\\\"btn-group d-flex\\\">\\r\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\r\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"tab-panel\\\">\\r\\n        <tabset class=\\\"member-tabset\\\" #memberTabs>\\r\\n          <tab heading=\\\"About {{user.knownAs}}\\\">\\r\\n            <h4>Description</h4>\\r\\n            <p>{{user.introduction}}</p>\\r\\n            <h4>Looking For</h4>\\r\\n            <p>{{user.lookingFor}}</p>\\r\\n          </tab>\\r\\n          <tab heading=\\\"Interests\\\">\\r\\n            <h4>Interests</h4>\\r\\n            <p>{{user.interests}}</p>\\r\\n          </tab>\\r\\n          <tab heading=\\\"Photos\\\">\\r\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\r\\n          </tab>\\r\\n          <tab heading=\\\"Messages\\\">\\r\\n            <app-member-messages [recipientId]=\\\"user.id\\\"></app-member-messages>\\r\\n          </tab>\\r\\n        </tabset>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { User } from '../../_models/User';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  NgxGalleryOptions,\r\n  NgxGalleryImage,\r\n  NgxGalleryAnimation\r\n} from 'ngx-gallery';\r\nimport { TabsetComponent } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css']\r\n})\r\nexport class MemberDetailComponent implements OnInit {\r\n  @ViewChild('memberTabs')\r\n  memberTabs: TabsetComponent;\r\n  user: User;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.user = data['user'];\r\n    });\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      const selectedTab = params['tab'];\r\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\r\n    });\r\n\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ];\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages() {\r\n    const imagesUrl = [];\r\n    for (let i = 0; i < this.user.photos.length; i++) {\r\n      imagesUrl.push({\r\n        small: this.user.photos[i].url,\r\n        medium: this.user.photos[i].url,\r\n        big: this.user.photos[i].url,\r\n        description: this.user.photos[i].description\r\n      });\r\n    }\r\n\r\n    return imagesUrl;\r\n  }\r\n\r\n  selectTab(tabId: number) {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n}\r\n","module.exports = \".img-thumbnail {\\r\\n  margin: 25px;\\r\\n  width: 85%;\\r\\n  height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n  padding: 10px 15px;\\r\\n  background-color: #fff;\\r\\n  border-top: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <h1>Your Profile</h1>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"alert alert-info\\\" *ngIf=\\\"editForm.dirty\\\">\\r\\n        <strong>Information:</strong> You have made changes. Any unsaved changes will be lost!\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div>\\r\\n            <strong>Location:</strong>\\r\\n            <p>{{user.city}}, {{user.country}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Age:</strong>\\r\\n            <p>{{user.age}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Last Active:</strong>\\r\\n            <p>{{user.lastActive | timeAgo}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Member Since:</strong>\\r\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"tab-panel\\\">\\r\\n        <tabset class=\\\"member-tabset\\\">\\r\\n          <tab heading=\\\"Edit Profile\\\">\\r\\n            <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\r\\n              <h4>Description</h4>\\r\\n              <textarea name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.introduction\\\"></textarea>\\r\\n              <h4>Looking For</h4>\\r\\n              <textarea name=\\\"lookingFor\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\r\\n              <h4>Interests</h4>\\r\\n              <textarea name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.interests\\\"></textarea>\\r\\n              <h4>Location Details:</h4>\\r\\n              <div class=\\\"form-inline\\\">\\r\\n                <label for=\\\"city\\\">City</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\r\\n                <label for=\\\"country\\\">Country</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\r\\n              </div>\\r\\n            </form>\\r\\n          </tab>\\r\\n          <tab heading=\\\"Edit Photos\\\">\\r\\n            <app-photo-editor [photos]=\\\"user.photos\\\" (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-editor>\\r\\n          </tab>\\r\\n        </tabset>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { User } from '../../_models/User';\r\nimport { ActivatedRoute } from '../../../../node_modules/@angular/router';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { NgForm } from '../../../../node_modules/@angular/forms';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AuthService } from '../../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  user: User;\r\n  photoUrl: string;\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotifivation($event: any) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private alertify: AlertifyService,\r\n    private userService: UserService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.user = data['user'];\r\n    });\r\n    this.authService.currentPhotoUrl.subscribe(\r\n      photoUrl => (this.photoUrl = photoUrl)\r\n    );\r\n  }\r\n\r\n  updateUser() {\r\n    this.userService\r\n      .updateUser(this.authService.decodedToken.nameid, this.user)\r\n      .subscribe(\r\n        next => {\r\n          this.alertify.success('Profile updated successfully');\r\n          this.editForm.reset(this.user);\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  updateMainPhoto(photoUrl) {\r\n    this.user.photoUrl = photoUrl;\r\n  }\r\n}\r\n","module.exports = \".equal {\\r\\n  display: flex;\\r\\n  flex-flow: row wrap;\\r\\n  align-content: flex-end;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container mt-3\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <h2>Your matches - {{pagination.totalItems}} found</h2>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"minAge\\\">Age From</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"width: 70px\\\" id=\\\"minAge\\\" [(ngModel)]=\\\"userParams.minAge\\\" name=\\\"minAge\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"maxAge\\\">Age To</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\" [(ngModel)]=\\\"userParams.maxAge\\\" name=\\\"maxAge\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gender\\\">Show: </label>\\r\\n        <select class=\\\"form-control\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\" [(ngModel)]=\\\"userParams.gender\\\" name=\\\"gender\\\">\\r\\n          <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\r\\n            {{gender.display}}\\r\\n          </option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"resetFilters()\\\" style=\\\"margin-left:10px\\\">Reset Filter</button>\\r\\n\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"btn-group float-right\\\">\\r\\n          <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\r\\n          <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"created\\\">Newest Members</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\r\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"d-flex justify-content-center\\\">\\r\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\r\\n    (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n  </pagination>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../_models/User';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Pagination, PaginatedResult } from '../../_models/pagination';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  users: User[];\r\n  user: User = JSON.parse(localStorage.getItem('user'));\r\n  genderList = [\r\n    { value: 'male', display: 'Males' },\r\n    { value: 'female', display: 'Females' }\r\n  ];\r\n  userParams: any = {};\r\n  pagination: Pagination;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.users = data['users'].result;\r\n      this.pagination = data['users'].pagination;\r\n    });\r\n\r\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.userParams.orderBy = 'lastActive';\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService\r\n      .getUsers(\r\n        this.pagination.currentPage,\r\n        this.pagination.itemsPerPage,\r\n        this.userParams\r\n      )\r\n      .subscribe(\r\n        (res: PaginatedResult<User[]>) => {\r\n          this.users = res.result;\r\n          this.pagination = res.pagination;\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","module.exports = \".card {\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n  list-style: none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.chat li {\\r\\n  margin-bottom: 10px;\\r\\n  padding-bottom: 10px;\\r\\n  border-bottom: 1px dotted #b3a9a9;\\r\\n}\\r\\n\\r\\n.rounded-circle {\\r\\n  height: 50px;\\r\\n  width: 50px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  overflow-y: scroll;\\r\\n  height: 400px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"car\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\r\\n      <p>No messages yet... say hi by using the message box below</p>\\r\\n    </div>\\r\\n\\r\\n    <ul class=\\\"chat\\\">\\r\\n      <li *ngFor=\\\"let message of messages\\\">\\r\\n        <!-- to them -->\\r\\n        <div *ngIf=\\\"message.senderId == recipientId\\\">\\r\\n          <span class=\\\"chat-img float-left\\\">\\r\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\r\\n          </span>\\r\\n          <div class=\\\"chat-body\\\">\\r\\n            <div class=\\\"header\\\">\\r\\n              <strong class=\\\"primary-font\\\">{{message.senderKnownAs}}</strong>\\r\\n              <small class=\\\"text-muted float-right\\\">\\r\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSend | timeAgo}}</span>\\r\\n              </small>\\r\\n            </div>\\r\\n            <p>\\r\\n              {{message.content}}\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- to me -->\\r\\n        <!-- to them -->\\r\\n        <div *ngIf=\\\"message.senderId != recipientId\\\">\\r\\n          <span class=\\\"chat-img float-right\\\">\\r\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\r\\n          </span>\\r\\n          <div class=\\\"chat-body\\\">\\r\\n            <div class=\\\"header\\\">\\r\\n              <small class=\\\"text-muted\\\">\\r\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSend | timeAgo}}</span>\\r\\n                <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(unred)</span>\\r\\n                <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\">(Read {{message.dateRead | timeAgo}})</span>\\r\\n              </small>\\r\\n              <strong class=\\\"primary-font float-right\\\">{{message.senderKnownAs}}</strong>\\r\\n            </div>\\r\\n            <p>\\r\\n              {{message.content}}\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-footer\\\">\\r\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <input [(ngModel)]=\\\"newMessage.content\\\" name=\\\"content\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"send a private message\\\">\\r\\n        <div class=\\\"input-group-append\\\">\\r\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!messageForm.valid\\\">Send</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { Message } from '../../_models/message';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css']\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @Input()\r\n  recipientId: number;\r\n  messages: Message[];\r\n  newMessage: any = {};\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages() {\r\n    const currentUserId = this.authService.decodedToken.nameid;\r\n    this.userService\r\n      .getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\r\n      .pipe(\r\n        tap(messages => {\r\n          for (let i = 0; i < messages.length; i++) {\r\n            if (\r\n              messages[i].isRead === false &&\r\n              messages[i].recipientId === currentUserId\r\n            ) {\r\n              this.userService.markAsRead(currentUserId, messages[i].id);\r\n            }\r\n          }\r\n        })\r\n      )\r\n      .subscribe(\r\n        messages => {\r\n          this.messages = messages;\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  sendMessage() {\r\n    this.newMessage.recipientId = this.recipientId;\r\n    this.userService\r\n      .sendMessage(this.authService.decodedToken.nameid, this.newMessage)\r\n      .subscribe(\r\n        (message: Message) => {\r\n          this.messages.unshift(message);\r\n          this.newMessage.content = '';\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","module.exports = \"img.img-thumbnail {\\r\\n  height: 100px;\\r\\n  min-width: 100px !important;\\r\\n  margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.nv-file-over {\\r\\n  border: dotted 3px red;\\r\\n}\\r\\n\\r\\ninput[type=file] {\\r\\n  color: transparent;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\r\\n    <img src=\\\"{{photo.url}}\\\" class=\\\"img-thumbnail p-1\\\" alt=\\\"\\\">\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\" (click)=\\\"setMainPhoto(photo)\\\" [disabled]=\\\"photo.isMain\\\" [ngClass]=\\\"photo.isMain? 'btn-success active' : 'btn-secondary'\\\">Main</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deletePhoto(photo.id)\\\" [disabled]=\\\"photo.isMain\\\">\\r\\n        <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mt-3\\\">\\r\\n\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n\\r\\n    <h3>Add Photos</h3>\\r\\n\\r\\n    <div ng2FileDrop [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\" (fileOver)=\\\"fileOverBase($event)\\\" [uploader]=\\\"uploader\\\"\\r\\n      class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\r\\n      <i class=\\\"fa fa-upload fa-3x\\\"></i>\\r\\n      Drop Photos Here\\r\\n    </div>\\r\\n\\r\\n    Multiple\\r\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple />\\r\\n    <br/> Single\\r\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\r\\n\\r\\n    <h3>Upload queue</h3>\\r\\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\\r\\n\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th width=\\\"50%\\\">Name</th>\\r\\n          <th>Size</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n          <td>\\r\\n            <strong>{{ item?.file?.name }}</strong>\\r\\n          </td>\\r\\n          <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n    <div>\\r\\n      <div>\\r\\n        Queue progress:\\r\\n        <div class=\\\"progress mb-4\\\">\\r\\n          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\r\\n        <span class=\\\"fa fa-upload\\\"></span> Upload\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\" (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\r\\n        <span class=\\\"fa fa-ban\\\"></span> Cancel\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\" (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\r\\n        <span class=\\\"fa fa-trash\\\"></span> Remove\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Photo } from '../../_models/Photo';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { isNgTemplate } from '../../../../node_modules/@angular/compiler';\r\nimport { UserService } from '../../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() photos: Photo[];\r\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  currentMain: Photo;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private alertify: AlertifyService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url:\r\n        this.baseUrl +\r\n        'users/' +\r\n        this.authService.decodedToken.nameid +\r\n        '/photos',\r\n      authToken: 'Bearer ' + localStorage.getItem('token'),\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = file => {\r\n      file.withCredentials = false;\r\n    };\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const res: Photo = JSON.parse(response);\r\n        const photo = {\r\n          id: res.id,\r\n          url: res.url,\r\n          dateAdded: res.dateAdded,\r\n          description: res.description,\r\n          isMain: res.isMain\r\n        };\r\n        this.photos.push(photo);\r\n\r\n        if (photo.isMain) {\r\n          this.authService.changeMemberPhoto(photo.url);\r\n          this.authService.currentUser.photoUrl = photo.url;\r\n          localStorage.setItem(\r\n            'user',\r\n            JSON.stringify(this.authService.currentUser)\r\n          );\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.userService\r\n      .setMainPhoto(this.authService.decodedToken.nameid, photo.id)\r\n      .subscribe(\r\n        () => {\r\n          this.currentMain = this.photos.filter(p => p.isMain === true)[0];\r\n          this.currentMain.isMain = false;\r\n          photo.isMain = true;\r\n          this.authService.changeMemberPhoto(photo.url);\r\n          this.authService.currentUser.photoUrl = photo.url;\r\n          localStorage.setItem(\r\n            'user',\r\n            JSON.stringify(this.authService.currentUser)\r\n          );\r\n          this.alertify.success('Successfully set as main');\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  deletePhoto(id: number) {\r\n    this.alertify.confirm('Are you sure you want to delete this photo?', () => {\r\n      this.userService\r\n        .deletePhoto(this.authService.decodedToken.nameid, id)\r\n        .subscribe(\r\n          () => {\r\n            this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\r\n            this.alertify.success('Photo has been deleted');\r\n          },\r\n          error => {\r\n            this.alertify.error('Failed to delete the photo');\r\n          }\r\n        );\r\n    });\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  margin-top: 15px;\\r\\n}\\r\\n\\r\\n.img-circle {\\r\\n  max-height: 50px;\\r\\n}\\r\\n\\r\\ntd {\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container mt-5\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\r\\n        <i class=\\\"fa fa-envelope\\\"></i> Unread\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\r\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\r\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\r\\n    <h3>No messages</h3>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\r\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\r\\n      <tr>\\r\\n        <th style=\\\"width: 40%\\\">Message</th>\\r\\n        <th style=\\\"width: 20%\\\">From / To</th>\\r\\n        <th style=\\\"width: 20%\\\">Sent / Received</th>\\r\\n        <th style=\\\"width: 20%\\\"></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members', \\r\\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\" [queryParams]=\\\"{tab: 3}\\\">\\r\\n        <td>{{message.content}}</td>\\r\\n        <td>\\r\\n          <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\r\\n            <img src={{message?.senderPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\r\\n            <strong>{{message.senderKnownAs}}</strong>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\r\\n            <img src={{message?.recipientPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\r\\n            <strong>{{message.recipientKnownAs}}</strong>\\r\\n          </div>\\r\\n        </td>\\r\\n        <td>{{message.messageSend | timeAgo}}</td>\\r\\n        <td>\\r\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\">Delete</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"d-flex justify-content-center\\\">\\r\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\r\\n    (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n  </pagination>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Message } from '../_models/message';\r\nimport { Pagination, PaginatedResult } from '../_models/pagination';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n  messages: Message[];\r\n  pagination: Pagination;\r\n  messageContainer: 'Unread';\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.messages = data['messages'].result;\r\n      this.pagination = data['messages'].pagination;\r\n    });\r\n  }\r\n\r\n  loadMessages() {\r\n    this.userService\r\n      .getMessages(\r\n        this.authService.decodedToken.nameid,\r\n        this.pagination.currentPage,\r\n        this.pagination.itemsPerPage,\r\n        this.messageContainer\r\n      )\r\n      .subscribe(\r\n        (res: PaginatedResult<Message[]>) => {\r\n          this.messages = res.result;\r\n          this.pagination = res.pagination;\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.alertify.confirm(\r\n      'Are you sure you want to delete this message?',\r\n      () => {\r\n        this.userService\r\n          .deleteMessage(id, this.authService.decodedToken.nameid)\r\n          .subscribe(\r\n            () => {\r\n              this.messages.splice(\r\n                this.messages.findIndex(m => m.id === id),\r\n                1\r\n              );\r\n              this.alertify.success('Message has been deleted');\r\n            },\r\n            error => {\r\n              this.alertify.error('Failed to delete the message');\r\n            }\r\n          );\r\n      }\r\n    );\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadMessages();\r\n  }\r\n}\r\n","module.exports = \".dropdown-menu li,\\r\\n.dropdown-toggle {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nimg {\\r\\n  max-height: 50px;\\r\\n  border: 2px solid white;\\r\\n  display: inline;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Dating App</a>\\r\\n\\r\\n    <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\">Matches</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\">Lists</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\">Messages</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\r\\n      <span class=\\\"mr-1\\\">\\r\\n        <img src=\\\"{{photoUrl || '../../assets/user.png'}}\\\">\\r\\n      </span>\\r\\n      <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\r\\n        Welcome {{authService.decodedToken?.unique_name | titlecase}}\\r\\n      </a>\\r\\n\\r\\n      <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\">\\r\\n          <i class=\\\"fa fa-user\\\"></i> Edit Profile</a>\\r\\n        <div class=\\\"dropdown-divider\\\"></div>\\r\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">\\r\\n          <i class=\\\"fa fa-sign-out\\\"></i> Logout</a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\r\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\r\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\r\\n      <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n  photoUrl: string;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private alertify: AlertifyService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.currentPhotoUrl.subscribe(\r\n      photoUrl => (this.photoUrl = photoUrl)\r\n    );\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model).subscribe(\r\n      next => {\r\n        this.alertify.success('Logged in successfully');\r\n      },\r\n      error => {\r\n        this.alertify.error(error);\r\n      },\r\n      () => {\r\n        this.router.navigate(['/members']);\r\n      }\r\n    );\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !!token;\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    this.authService.decodedToken = null;\r\n    this.authService.currentUser = null;\r\n\r\n    this.alertify.message('logged out');\r\n    this.router.navigate(['/home']);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\r\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\r\\n  <hr>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\r\\n    <label class=\\\"radio-inline\\\">\\r\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\r\\n    </label>\\r\\n    <label class=\\\"radio-inline ml-3\\\">\\r\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\r\\n    </label>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input [ngClass]=\\\"{'is-invalid' : registerForm.get('username').errors && registerForm.get('username').touched}\\\" type=\\\"text\\\"\\r\\n      class=\\\"form-control\\\" formControlName=\\\"username\\\" placeholder=\\\"Username\\\">\\r\\n    <div class=\\\"invalid-feedback\\\">Pleace choose a username</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\" class=\\\"form-control\\\"\\r\\n      placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known as is required</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\" class=\\\"form-control\\\"\\r\\n      placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\">\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of Birth is required</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\" class=\\\"form-control\\\"\\r\\n      placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\" class=\\\"form-control\\\"\\r\\n      placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is required</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input [ngClass]=\\\"{'is-invalid' : registerForm.get('password').errors && registerForm.get('password').touched}\\\" type=\\\"password\\\"\\r\\n      class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\\\">Password is required</div>\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\\\">Password must be at least 4 characters</div>\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\\\">Password cannot exceed 8 characters</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input [ngClass]=\\\"{'is-invalid' : registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched\\r\\n    || registerForm.get('confirmPassword').touched\\r\\n    && registerForm.hasError('mismatch')}\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\\\">Confirm Password is required</div>\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.hasError('mismatch') && registerForm.get('confirmPassword').touched\\\">Passwords must match</div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group text-center\\\">\\r\\n    <button class=\\\"btn btn-success\\\" [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">Register</button>\\r\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder\r\n} from '../../../node_modules/@angular/forms';\r\nimport { BsDatepickerConfig } from '../../../node_modules/ngx-bootstrap';\r\nimport { User } from '../_models/User';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  user: User;\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private alertify: AlertifyService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red'\r\n    };\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group(\r\n      {\r\n        gender: ['male'],\r\n        username: ['', Validators.required],\r\n        knownAs: ['', Validators.required],\r\n        dateOfBirth: [null, Validators.required],\r\n        city: ['', Validators.required],\r\n        country: ['', Validators.required],\r\n        password: [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(4),\r\n            Validators.maxLength(8)\r\n          ]\r\n        ],\r\n        confirmPassword: ['', Validators.required]\r\n      },\r\n      { validator: this.passwordMatchValidator }\r\n    );\r\n  }\r\n\r\n  passwordMatchValidator(g: FormGroup) {\r\n    return g.get('password').value === g.get('confirmPassword').value\r\n      ? null\r\n      : { mismatch: true };\r\n  }\r\n\r\n  register() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(\r\n        () => {\r\n          this.alertify.success('Registration successful');\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        },\r\n        () => {\r\n          this.authService.login(this.user).subscribe(\r\n            () => {\r\n              this.alertify.success('Logged in');\r\n              this.router.navigate(['/members']);\r\n            },\r\n            error => {\r\n              this.alertify.error(error);\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: 'members',\r\n        component: MemberListComponent,\r\n        resolve: { users: MemberListResolver }\r\n      },\r\n      {\r\n        path: 'members/:id',\r\n        component: MemberDetailComponent,\r\n        resolve: { user: MemberDetailResolver }\r\n      },\r\n      {\r\n        path: 'member/edit',\r\n        component: MemberEditComponent,\r\n        resolve: { user: MemberEditResolver },\r\n        canDeactivate: [PreventUnsavedChanges]\r\n      },\r\n      {\r\n        path: 'messages',\r\n        component: MessagesComponent,\r\n        resolve: { messages: MessagesResolver }\r\n      },\r\n      {\r\n        path: 'lists',\r\n        component: ListsComponent,\r\n        resolve: { users: ListsResolver }\r\n      }\r\n    ]\r\n  },\r\n  { path: '**', redirectTo: 'home', pathMatch: 'full' }\r\n];\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5000/api/'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}